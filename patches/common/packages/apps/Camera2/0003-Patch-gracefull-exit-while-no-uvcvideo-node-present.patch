From d0a580c471c3e8df19b5db929ef4f8acdb7867d3 Mon Sep 17 00:00:00 2001
From: "Nikumbh, Mayur NimbaX" <mayur.nimbax.nikumbh@intel.com>
Date: Mon, 13 Jan 2020 16:12:04 +0530
Subject: [PATCH] [Patch] gracefull exit while no uvcvideo node present

---
 src/com/android/camera/CameraActivity.java    |  2 +-
 .../android/camera/util/QuickActivity.java    | 21 ++++++++++++++++---
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/src/com/android/camera/CameraActivity.java b/src/com/android/camera/CameraActivity.java
index 868042a6c..365559e2e 100644
--- a/src/com/android/camera/CameraActivity.java
+++ b/src/com/android/camera/CameraActivity.java
@@ -319,7 +319,7 @@ public class CameraActivity extends QuickActivity
     /**
      * Whether the screen is kept turned on.
      */
-    private boolean mKeepScreenOn;
+    private boolean mKeepScreenOn=true;
     private int mLastLayoutOrientation;
     private final CameraAppUI.BottomPanel.Listener mMyFilmstripBottomControlListener =
             new CameraAppUI.BottomPanel.Listener() {
diff --git a/src/com/android/camera/util/QuickActivity.java b/src/com/android/camera/util/QuickActivity.java
index 18ea25368..d04924ed3 100644
--- a/src/com/android/camera/util/QuickActivity.java
+++ b/src/com/android/camera/util/QuickActivity.java
@@ -25,6 +25,9 @@ import android.os.SystemClock;
 
 import com.android.camera.debug.Log;
 import javax.annotation.Nullable;
+import android.hardware.Camera;
+import com.android.camera.FatalErrorHandler;
+import com.android.camera.FatalErrorHandlerImpl;
 
 /**
  * Workaround for lockscreen double-onResume() bug:
@@ -64,6 +67,8 @@ public abstract class QuickActivity extends Activity {
     /** A reference to the main handler on which to run lifecycle methods. */
     private Handler mMainHandler;
 
+    private FatalErrorHandler mFatalErrorHandler;
+    private int numberOfCameras;
     /**
      * True if onResume tasks have been skipped, and made false again once they
      * are executed within the onResume() method or from a delayed Runnable.
@@ -111,14 +116,22 @@ public abstract class QuickActivity extends Activity {
         mStartupOnCreate = true;
         super.onCreate(bundle);
         mMainHandler = new Handler(getMainLooper());
-        onCreateTasks(bundle);
+	mFatalErrorHandler = new FatalErrorHandlerImpl(this);
+	numberOfCameras = Camera.getNumberOfCameras();
+	if (numberOfCameras != 0) {
+	    onCreateTasks(bundle);
+	} else {
+	    mFatalErrorHandler.onGenericCameraAccessFailure();
+	}
         logLifecycle("onCreate", false);
     }
 
     @Override
     protected final void onStart() {
         logLifecycle("onStart", true);
-        onStartTasks();
+	if (numberOfCameras != 0){
+	    onStartTasks();
+	}
         super.onStart();
         logLifecycle("onStart", false);
     }
@@ -149,7 +162,9 @@ public abstract class QuickActivity extends Activity {
             Log.v(TAG, "onResume --> onResumeTasks()");
             // Doing the tasks, can set to false.
             mSkippedFirstOnResume = false;
-            onResumeTasks();
+            if (numberOfCameras != 0){
+              onResumeTasks();
+            }
         }
         super.onResume();
         logLifecycle("onResume", false);
-- 
2.17.1

